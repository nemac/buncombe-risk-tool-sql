--The creation of the exposure levels and adaptive capacity data table
--This process includes creating the tables intersecting of parcels and features within the 100 and 500 year floodplain
--When the intersection is being ran it pulls out the pinnum geometry building class and building values
--Once the exposued features have been found then a field is added to show whether or not the building within the parcel is also exposed--
--Year built values are then joined to the parcels data providing the all the metrics needed to assess adapative capacity-----

drop table if exists building_pinnum cascade;
drop table if exists parcels_fl1yr_tab cascade;
drop table if exists parcels_fl5yr_tab cascade;
drop table if exists build_fl1yr_tab cascade;
drop table if exists build_fl5yr_tab cascade;
---^^^when starting a new database run this query first to clear out old data^^^--

create table building_pinnum_join as
SELECT a.pinnum as pin, b.geom 
from property_4326 as a 
join footprints_4326 as b on st_intersects(a.geom,b.geom)
group by a.pinnum, b.geom;

CREATE table parcels_fl1yr_tab AS
SELECT a.pinnum as pin, a.geom, sum(a.buildingva), a.class
from property_4326 as a 
join fl1yr as b on st_intersects(a.geom,b.geom)
group by a.pinnum, a.geom, a.class;

CREATE table parcels_fl5yr_tab AS
SELECT a.pinnum as pin, a.geom, sum(a.buildingva), a.class
from property_4326 as a 
join fl5yr as b on st_intersects(a.geom,b.geom)
group by a.pinnum, a.geom, a.class;

CREATE table build_fl1yr_tab AS
SELECT a.pin, a.geom
from building_pinnum_join as a 
join fl1yr as b on st_intersects(a.geom,b.geom)
group by a.pin, a.geom;

CREATE table build_fl5yr_tab AS
SELECT a.pin as pin, a.geom, 
from building_pinnum_join as a 
join fl5yr as b on st_intersects(a.geom,b.geom)
group by a.pinn, a.geom;

create or replace view build_par_fl1yr_yn as 
null end) as yes_no from build_fl1yr_tab as a, parcels_fl1yr_tab as b 
pselect a.pin, (case when a.pin = b.pin then 'yes' else 
where a.pin= b.pin

create or replace view build_par_fl5yr_yn as 
select a.pin, (case when a.pin = b.pin then 'yes' else 
null end) as yes_no from build_fl5yr_tab as a, parcels_fl5yr_tab as b 
where a.pin= b.pin


alter table parcels_fl1yr_tab
add column bldg_fl1yr_yn text,
add column bldg_fl5yr_yn text,
add column year_built numeric;

alter table parcels_fl5yr_tab 
add column bldg_fl1yr_yn text,
add column bldg_fl5yr_yn text,
add column year_built numeric;

update parcels_fl1yr_tab as a
set year_built = b.year_built 
from year_built_com as b 
where a.pin = b.pinnum;

update parcels_fl1yr_tab as a
set year_built = b.year_built 
from year_built_res as b 
where a.pin = b.pinnum; 

update parcels_fl1yr_tab as a 
set bldg_flood_yn = b.yes_no 
from build_par_fl1yr_yn as b
where a.pin = b.pin

update parcels_fl5yr_tab as a 
set bldg_flood_yn = b.yes_no 
from build_par_fl5yr_yn as b
where a.pin = b.pin

